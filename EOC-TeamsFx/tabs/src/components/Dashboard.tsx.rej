--- EOC-TeamsFx/tabs/src/components/Dashboard.tsx	2025-05-28 15:42:24.498624900 +0100
+++ EOC-TeamsFx/tabs/src/components/Dashboard.tsx	2025-05-28 15:57:38.661616100 +0100
@@ -150,18 +150,17 @@
             // create graph endpoint for querying Incident Transaction list
             let graphEndpoint = `${graphConfig.spSiteGraphEndpoint}${this.props.siteId}/lists/${siteConfig.incidentsList}/items?$expand=fields
                 ($select=StatusLookupId,Status,id,IncidentId,IncidentName,IncidentCommander,Location,StartDateTime,
-                Modified,TeamWebURL,Description,IncidentType,RoleAssignment,RoleLeads,Severity,PlanID,
+                Modified,TeamWebURL,Description,IncidentProduct,IncidentMitreTactic,IncidentRisk,IncidentType,RoleAssignment,RoleLeads,Severity,PlanID,
                 BridgeID,BridgeLink,NewsTabLink,CloudStorageLink)&$Top=5000`;
 
             let allIncidents = this.sortDashboardData(await this.dataService.getDashboardData(graphEndpoint, this.props.graph));
             console.log(constants.infoLogPrefix + "All Incidents retrieved");
 
             // Redirect to current Incident Active Dashboard component
-            if (this.props.fromActiveDashboardTab) {
                 const activeIncident = allIncidents.find((e: any) => e.incidentId === parseInt(this.props.activeDashboardIncidentId));
+            if (this.props.fromActiveDashboardTab && activeIncident !== undefined) {
                 this.props.onShowActiveBridge(activeIncident);
             }
-
             else {
                 // filter for Planning tab
                 const planningIncidents = allIncidents.filter((e: any) => e.incidentStatusObj.status === constants.planning);
