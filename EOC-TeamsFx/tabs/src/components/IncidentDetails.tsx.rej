--- EOC-TeamsFx/tabs/src/components/IncidentDetails.tsx	2025-05-28 15:42:25.049203200 +0100
+++ EOC-TeamsFx/tabs/src/components/IncidentDetails.tsx	2025-05-28 15:57:39.287723300 +0100
@@ -115,6 +120,9 @@
     secIncCommanderLeadInEditModeHasRegexError: boolean;
     roleAddSuccessMessage: string;
     selectedLocation: any;
+    isViewIncidentProduct: boolean; //Incident Product 
+    isViewIncidentMitreTactic: boolean; //Incident Mitre Tactic
+    isViewIncidentRisk: boolean; //Incidentt Risk
 }
 
 // sets the initial values for required fields validation object
@@ -224,13 +254,22 @@
             secIncCommanderUserInEditModeHasRegexError: false,
             secIncCommanderLeadInEditModeHasRegexError: false,
             roleAddSuccessMessage: "",
-            selectedLocation: ""
+            selectedLocation: "",
+            isViewIncidentProduct: false,//Incidentt Product 
+            isViewIncidentMitreTactic: false, //Incident Mitre Tactic
+            isViewIncidentRisk: false, //Incidentt Risk
         };
         this.onRoleChange = this.onRoleChange.bind(this);
         this.onTextInputChange = this.onTextInputChange.bind(this);
         this.handleIncCommanderChange = this.handleIncCommanderChange.bind(this);
         this.onAddNewRoleChange = this.onAddNewRoleChange.bind(this);
         this.onIncidentTypeChange = this.onIncidentTypeChange.bind(this);
+
+        //Incidentt Product 
+        this.onIncidentProductChange = this.onIncidentProductChange.bind(this);
+        this.onIncidentMitreTacticChange = this.onIncidentMitreTacticChange.bind(this);
+        this.onIncidentRiskChange = this.onIncidentRiskChange.bind(this);
+
         this.onIncidentStatusChange = this.onIncidentStatusChange.bind(this);
 
         // localized messages for people pickers
@@ -1733,6 +1897,8 @@
 
     // create new entry in incident transaction list
     private createNewIncident = async () => {
+        debugger;
+
         this.scrollToTop();
         // incident info object
         let incidentInfo: IncidentEntity = this.state.incDetailsItem;
@@ -2778,7 +2981,7 @@
 
             this.state.roleAssignments.forEach(roles => {
                 //adding users of secondary incident commander role and "Edit Access Role" as owners and members
-                if (roles.role === constants.secondaryIncidentCommanderRole || roles.role === this.props.editIncidentAccessRole ) {
+                if (roles.role === constants.secondaryIncidentCommanderRole || roles.role === this.props.editIncidentAccessRole) {
                     roles.userDetailsObj.forEach(user => {
                         if (ownerArr.indexOf(this.state.graphContextURL + graphConfig.usersGraphEndpoint + "/" + user.userId) === -1) {
                             ownerArr.push(this.state.graphContextURL + graphConfig.usersGraphEndpoint + "/" + user.userId);
@@ -4503,6 +4763,264 @@
                                                 </Col>
                                             </Row>
                                             <Row xs={1} sm={1} md={2} lg={2} xl={2}>
+
+                                            {/* incProductList ProductList */}
+                                                {
+                                                    this.state.isViewIncidentProduct === false && this.state.isViewIncidentMitreTactic === false && this.state.isViewIncidentRisk === false ?
+                                                        null :
+                                                          
+                                                    <Col xs={12} sm={12} md={6} lg={6} xl={6}>
+
+                                                        {
+                                                            this.state.isViewIncidentProduct === true ?
+
+                                                                <div className="incident-grid-item" ref={this.incProductRef}>
+                                                                    <label className="FormInput-label">{this.props.localeStrings.fieldProductList}</label>
+                                                                    {
+
+                                                                        this.props.isEditMode ?
+                                                                            this.state.incDetailsItem ?
+                                                                                this.state.incDetailsItem.incidentProduct !== '' ?
+                                                                                    <FormDropdown
+                                                                                        placeholder={this.props.localeStrings.phProductList}
+                                                                                        fluid={true}
+                                                                                        value={this.state.incDetailsItem ? (this.state.incDetailsItem.incidentProduct ? this.state.incDetailsItem.incidentProduct : '') : ''}
+                                                                                        className={"incident-type-dropdown-disabled"}
+                                                                                        disabled={true}
+                                                                                        aria-label={this.props.localeStrings.fieldProductList + constants.requiredAriaLabel}
+                                                                                    />
+                                                                                    : null : null
+                                                                            :
+
+
+                                                                            <div className="product-field-with-cancel-icon">
+
+                                                                                <ComboBox
+                                                                                    placeholder={this.props.localeStrings.phProductList}
+                                                                                    options={this.state.dropdownOptions["productOptions"] ? this.options(this.state.dropdownOptions["productOptions"]) : []}
+                                                                                    onChange={this.onIncidentProductChange}
+                                                                                    className={"incident-product-dropdown"}
+                                                                                    useComboBoxAsMenuWidth={true}
+                                                                                    allowFreeInput={true}
+                                                                                    persistMenu={true}
+                                                                                    calloutProps={{ directionalHintFixed: true, doNotLayer: true }}
+                                                                                    ref={this.incidentProduct}
+                                                                                    ariaLabel={this.props.localeStrings.fieldProductList + constants.requiredAriaLabel}
+                                                                                    id="incident-product-listbox"
+                                                                                    onMenuOpen={this.onMenuOpen}
+                                                                                    styles={{
+                                                                                        optionsContainer: {
+                                                                                            "button span": {
+                                                                                                maxHeight: "35px",
+                                                                                                height: "auto"
+                                                                                            }
+                                                                                        }
+                                                                                    }}
+                                                                                />
+                                                                                <span
+                                                                                    className="chnl-remove-icon"
+                                                                                    title={this.props.localeStrings.headerDelete}
+                                                                                    onClick={() => this.removeCategory("product")}
+                                                                                    // onKeyDown={(evt: any) => { if (evt.key === constants.enterKey) this.removeChannelInput(idx) }}
+                                                                                    tabIndex={0}
+                                                                                    role="button"
+                                                                                >
+                                                                                    <Dismiss24Regular />
+                                                                                </span>
+                                                                            </div>
+
+
+                                                                    }
+                                                                    {this.state.inputValidation.incidentProductHasError && (
+                                                                        <label aria-live="polite" role="alert" className="message-label">{this.props.localeStrings.incidentProductListRequired}</label>
+                                                                    )}
+                                                                </div>
+                                                                : null
+                                                        }
+                                                     </Col>
+
+                                                }
+
+                                                   {/* incMitreTacticList Mitre Tactic */}
+
+                                                {
+                                                    this.state.isViewIncidentMitreTactic === false && this.state.isViewIncidentMitreTactic === false && this.state.isViewIncidentRisk === false ?
+                                                        null :
+                                                          
+                                                    <Col xs={12} sm={12} md={6} lg={6} xl={6}>
+
+                                                        {
+                                                            this.state.isViewIncidentMitreTactic === true ?
+
+                                                                <div className="incident-grid-item" ref={this.incMitreTacticRef}>
+                                                                    <label className="FormInput-label">{this.props.localeStrings.fieldMitreTacticList}</label>
+                                                                    {
+
+                                                                        this.props.isEditMode ?
+                                                                            this.state.incDetailsItem ?
+                                                                                this.state.incDetailsItem.incidentMitreTactic !== '' ?
+                                                                                    <FormDropdown
+                                                                                        placeholder={this.props.localeStrings.phMitreTacticList}
+                                                                                        fluid={true}
+                                                                                        value={this.state.incDetailsItem ? (this.state.incDetailsItem.incidentMitreTactic ? this.state.incDetailsItem.incidentMitreTactic : '') : ''}
+                                                                                        className={"incident-type-dropdown-disabled"}
+                                                                                        disabled={true}
+                                                                                        aria-label={this.props.localeStrings.fieldMitreTacticList + constants.requiredAriaLabel}
+                                                                                    />
+                                                                                    : null : null
+                                                                            :
+
+
+                                                                            <div className="mitretactic-field-with-cancel-icon">
+
+                                                                                <ComboBox
+                                                                                    placeholder={this.props.localeStrings.phMitreTacticList}
+                                                                                    options={this.state.dropdownOptions["mitreTacticOptions"] ? this.options(this.state.dropdownOptions["mitreTacticOptions"]) : []}
+                                                                                    onChange={this.onIncidentMitreTacticChange}
+                                                                                    className={"incident-mitretactic-dropdown"}
+                                                                                    useComboBoxAsMenuWidth={true}
+                                                                                    allowFreeInput={true}
+                                                                                    persistMenu={true}
+                                                                                    calloutProps={{ directionalHintFixed: true, doNotLayer: true }}
+                                                                                    ref={this.incidentMitreTactic}
+                                                                                    ariaLabel={this.props.localeStrings.fieldMitreTacticList + constants.requiredAriaLabel}
+                                                                                    id="incident-mitreTactic-listbox"
+                                                                                    onMenuOpen={this.onMenuOpen}
+                                                                                    styles={{
+                                                                                        optionsContainer: {
+                                                                                            "button span": {
+                                                                                                maxHeight: "35px",
+                                                                                                height: "auto"
+                                                                                            }
+                                                                                        }
+                                                                                    }}
+                                                                                />
+                                                                                <span
+                                                                                    className="chnl-remove-icon"
+                                                                                    title={this.props.localeStrings.headerDelete}
+                                                                                    onClick={() => this.removeCategory("mitreTactic")}
+                                                                                    // onKeyDown={(evt: any) => { if (evt.key === constants.enterKey) this.removeChannelInput(idx) }}
+                                                                                    tabIndex={0}
+                                                                                    role="button"
+                                                                                >
+                                                                                    <Dismiss24Regular />
+                                                                                </span>
+                                                                            </div>
+
+
+                                                                    }
+                                                                    {this.state.inputValidation.incidentMitreTacticHasError && (
+                                                                        <label aria-live="polite" role="alert" className="message-label">{this.props.localeStrings.incidentMitreTacticListRequired}</label>
+                                                                    )}
+                                                                </div>
+                                                                : null
+                                                        }
+                                                     </Col>
+
+                                                }
+
+                                                {/* incRiskList Risk */}
+
+                                                {
+                                                    this.state.isViewIncidentRisk === false && this.state.isViewIncidentRisk === false && this.state.isViewIncidentRisk === false ?
+                                                        null :
+                                                          
+                                                    <Col xs={12} sm={12} md={6} lg={6} xl={6}>
+
+                                                        {
+                                                            this.state.isViewIncidentRisk === true ?
+
+                                                                <div className="incident-grid-item" ref={this.incRiskRef}>
+                                                                    <label className="FormInput-label">{this.props.localeStrings.fieldRiskList}</label>
+                                                                    {
+
+                                                                        this.props.isEditMode ?
+                                                                            this.state.incDetailsItem ?
+                                                                                this.state.incDetailsItem.incidentRisk !== '' ?
+                                                                                    <FormDropdown
+                                                                                        placeholder={this.props.localeStrings.phRiskList}
+                                                                                        fluid={true}
+                                                                                        value={this.state.incDetailsItem ? (this.state.incDetailsItem.incidentRisk ? this.state.incDetailsItem.incidentRisk : '') : ''}
+                                                                                        className={"incident-type-dropdown-disabled"}
+                                                                                        disabled={true}
+                                                                                        aria-label={this.props.localeStrings.fieldRiskList + constants.requiredAriaLabel}
+                                                                                    />
+                                                                                    : null : null
+                                                                            :
+
+
+                                                                            <div className="risk-field-with-cancel-icon">
+
+                                                                                <ComboBox
+                                                                                    placeholder={this.props.localeStrings.phRiskList}
+                                                                                    options={this.state.dropdownOptions["riskOptions"] ? this.options(this.state.dropdownOptions["riskOptions"]) : []}
+                                                                                    onChange={this.onIncidentRiskChange}
+                                                                                    className={"incident-risk-dropdown"}
+                                                                                    useComboBoxAsMenuWidth={true}
+                                                                                    allowFreeInput={true}
+                                                                                    persistMenu={true}
+                                                                                    calloutProps={{ directionalHintFixed: true, doNotLayer: true }}
+                                                                                    ref={this.incidentRisk}
+                                                                                    ariaLabel={this.props.localeStrings.fieldRiskList + constants.requiredAriaLabel}
+                                                                                    id="incident-risk-listbox"
+                                                                                    onMenuOpen={this.onMenuOpen}
+                                                                                    styles={{
+                                                                                        optionsContainer: {
+                                                                                            "button span": {
+                                                                                                maxHeight: "35px",
+                                                                                                height: "auto"
+                                                                                            }
+                                                                                        }
+                                                                                    }}
+                                                                                />
+                                                                                <span
+                                                                                    className="chnl-remove-icon"
+                                                                                    title={this.props.localeStrings.headerDelete}
+                                                                                    onClick={() => this.removeCategory("risk")}
+                                                                                    // onKeyDown={(evt: any) => { if (evt.key === constants.enterKey) this.removeChannelInput(idx) }}
+                                                                                    tabIndex={0}
+                                                                                    role="button"
+                                                                                >
+                                                                                    <Dismiss24Regular />
+                                                                                </span>
+                                                                            </div>
+
+
+                                                                    }
+                                                                    {this.state.inputValidation.incidentRiskHasError && (
+                                                                        <label aria-live="polite" role="alert" className="message-label">{this.props.localeStrings.incidentRiskListRequired}</label>
+                                                                    )}
+                                                                </div>
+                                                                : null
+                                                        }
+                                                     </Col>
+
+                                                }
+
+                                                {
+                                                    !this.props.isEditMode ?                                                
+                                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>
+                                                            {
+                                                                this.state.isViewIncidentProduct === false || this.state.isViewIncidentMitreTactic === false || this.state.isViewIncidentRisk === false ?
+                                                                <div className="incident-grid-item" style={{marginTop:20}} ref={this.incProductRef}>
+                                                                <Button
+                                                                        icon={<AddIcon />}
+                                                                        content={this.props.localeStrings.addCategoryBtnLabel}
+                                                                        title={this.props.localeStrings.addCategoryBtnLabel}
+                                                                        iconPosition="before"
+                                                                        onClick={() => this.addCategory()}
+                                                                        className="add-chnl-btn"
+                                                                    />
+                                                                    </div>   
+                                                                    : null
+                                                            }
+                                                        </Col> : null
+                                                }
+
+                                            </Row> 
+
+                                            <Row xs={1} sm={1} md={2} lg={2} xl={2}>
+
                                                 <Col xs={12} sm={12} md={6} lg={6} xl={6}>
                                                     <div className="incident-grid-item" ref={this.incTypeRef}>
                                                         <label className="FormInput-label">{this.props.localeStrings.fieldIncidentType}</label>
